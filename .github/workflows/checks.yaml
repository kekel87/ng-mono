name: ‚úÖ Checks
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  install:
    name: üöß Install
    if: ${{ !startsWith(github.head_ref, 'release-please') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install

  lint:
    name: üëÆ Lint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install
        with:
          pull_cache_only: 'true'
      - uses: actions/cache@v3
        with:
          path: .cache/eslint
          key: ${{ runner.os }}-eslint-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-eslint-${{ github.ref }}
            ${{ runner.os }}-eslint
      - run: npx nx affected --target=lint

  test:
    name: üß™ Unit tests
    runs-on: ubuntu-latest
    needs: install
    env:
      TZ: 'Europe/Paris'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install
        with:
          pull_cache_only: 'true'
      - uses: actions/cache@v3
        with:
          path: .cache/jest
          key: ${{ runner.os }}-jest-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ github.ref }}
            ${{ runner.os }}-jest
      - run: npx nx affected --target=test --ci --parallel=2

  e2e:
    name: üêµ E2E tests
    if: ${{ github.event_name != 'push' }}
    runs-on: ubuntu-latest
    needs: install
    env:
      RUNTIME_CONFIG_TRAVEL_JSON: ${{ secrets.RUNTIME_CONFIG_TRAVEL_JSON }}
      RUNTIME_CONFIG_NETATMO_JSON: ${{ secrets.RUNTIME_CONFIG_NETATMO_JSON }}
      RUNTIME_CONFIG_COLLECTIONS_JSON: ${{ secrets.RUNTIME_CONFIG_COLLECTIONS_QA_JSON }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install
        with:
          pull_cache_only: 'true'
      - run: npx nx affected --target=runtime-config
      - uses: actions/cache@v3
        with:
          path: .cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - run: npx nx affected --target=e2e --parallel=1

  build:
    name: üõ†Ô∏è Test build
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: ./.github/actions/install
      - run: npx nx affected --target=build
